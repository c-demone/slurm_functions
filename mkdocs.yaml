site_name: PySLURM Decorators
repo_name: aecurrency/pyslurm_decorators
repo_url: https://fcp4agithdp01.bocad.bank-banque-canada.ca/aecurrency/pyslurm_decorators
edit_uri: ""
theme:
  features:
    - content.code.annotate
  name: material
  logo: img/pyslurm-decorators-icon.png
  palette:
    - scheme: slate
      primary: green
      accent: light green
      toggle:
        icon: material/toggle-switch
        name: Switch to light mode  
    - scheme: default
      primary: green
      accent: cyan
      toggle:
        icon: material/toggle-switch-off-outline
        name: Switch to dark mode
      
markdown_extensions:
  - abbr
  - admonition
  - attr_list
  - footnotes
  - meta
  - def_list
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
  - pymdownx.highlight
  - pymdownx.superfences
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.smartsymbols
  - pymdownx.snippets
  - pymdownx.tabbed
  - pymdownx.tasklist:
      custom_checkbox: true
      clickable_checkbox: true

nav:
    - Home: 'index.md'
    - Decorators:
      - slurm: 'decorators/slurm.md'
    - Callbacks:
      - SLURMClusterCallback: 'callbacks/slurmcluster.md'

    - Examples:
      - Example 1 - Exploring the SLURMClusterCallback Object: 
        - Running the Example: 'examples/example1.md'
        - 'code_samples/example1.ipynb'
      - Example 2 - Using the @slurm decorator:
        - Running the Example: 'examples/example2.md'
        - 'code_samples/example2.ipynb'
      - Example 3 - Using .map to Execute Function for Multiple Inputs in Parallel: 
        - Running the Example: 'examples/example3.md'
        - 'code_samples/example3.ipynb'
    #  - Example 4 - Creating a GIF from 3.6 Million Data Points with Dask and Datashader:
    #    - Running the Example: 'examples/example4.md'
    #    - code_samples/example4.ipynb
    - Extra:
       - Dask Notes: 'extra/dask.md'
       
plugins:
  - search
  - awesome-pages
  - mkdocs-jupyter:
      execute: True
      kernel_name: python3
  - mkdocstrings:
      handlers:
        python:
          setup_commands:
            - import sys
            - sys.path.insert(0, ".")
            - from pydantic import BaseModel, Field, validator
            - from typing import Optional, Union


extra_css:
    - 'css/termynal.css'
    - 'css/custom.css'
    - 'css/jupyter.css'

extra_javascript:
    - 'js/termynal.js'
    - 'js/custom.js'